#!/usr/bin/env bash
# Interactive helper to create `.env.local` with Supabase keys
# Usage: ./scripts/setup_supabase.sh

set -euo pipefail

echo "This will create a .env.local file with Supabase keys in the project root."
read -rp "Enter NEXT_PUBLIC_SUPABASE_URL (e.g. https://xyz.supabase.co): " SUPA_URL
read -rp "Enter NEXT_PUBLIC_SUPABASE_ANON_KEY (anon/public key) (can leave empty if you only want service role): " SUPA_ANON
read -rp "Enter SUPABASE_SERVICE_ROLE_KEY (server key) (required for server-side operations): " SUPA_SERVICE

if [ -z "${SUPA_URL// }" ] || [ -z "${SUPA_SERVICE// }" ]; then
  echo "ERROR: NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY are required. Aborting."
  exit 1
fi

ENV_FILE=.env.local

cat > "$ENV_FILE" <<EOF
# Generated by ./scripts/setup_supabase.sh — do NOT commit this file
NEXT_PUBLIC_SUPABASE_URL=${SUPA_URL}
NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPA_ANON}
SUPABASE_SERVICE_ROLE_KEY=${SUPA_SERVICE}
EOF

chmod 600 "$ENV_FILE" || true

echo "Created $ENV_FILE"

echo "Running quick verify (may require dev server running on localhost:3000)..."
if command -v ./scripts/verify_supabase.sh >/dev/null 2>&1; then
  ./scripts/verify_supabase.sh http://localhost:3000 || echo "Verify failed — check Supabase project or run server on :3000"
else
  echo "verify_supabase.sh not found; you can run ./scripts/verify_supabase.sh <base-url>"
fi

echo "Done. Restart your dev server (npm run dev) if it's running."
